// ""로 넣는게 좋다.
@charset "utf-8";

@import url("https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@1,400;1,700&family=Noto+Sans+KR:wght@100;300;400;500;700&family=Noto+Serif+KR:wght@700&display=swap");

//변수는 reset 보다 위에
$url: "../images/";
$main: #e60012;
$gray: #333, #666, #999, #d8d8d8, #f5f6f7;
// background-color:nth($gray, 3) #999

@import "reset", "mixin";

//font는 body에 선언하면 좋다. 상속되기 때문에
body {
  //한글을 지원하지 않는 폰트부터 -> 한글 지원하는 폰트로 되며 마지막엔 대표글꼴을 작성한다.
  font-family: "Montserrat", "Noto Sans KR", sans-serif;
}

%base {
  width: 100%;
  max-width: 1350px;
  padding: 0 25px;
  margin: 0 auto;
}

.pageHeader {
  @include flex($a: center);
  padding: 0 25px;
  //width 100%를 주지말자.
  position: fixed;
  left: 0;
  right: 0;
  top: 0;
  z-index: 99;
  h1 {
    width: 142px;
    a {
      //높이는 부모한테 안주는 것을 추천
      height: 60px;
      display: block;
      @include bg("mainLogo.png", $size: contain);
    }
  }
  .gnb {
    @include flex;
    color: #fff;
  }
  //gnb 아래의 요소지만 클래스명을 길게 늘리지 않기 위해 밖으로 뻈다.
  .list {
    @include flex;
    li {
      margin-right: 1.5em;
    }
  }
  .btnHam {
    width: 34px;
    height: 24px;
    &:hover {
      //.btnHam:hover와 같다.
      b {
        width: 100%;
      }
    }

    span {
      display: block;
      height: 2px;
      background-color: #fff;
      position: relative;
      &:nth-of-type(2) {
        margin: 5px 0;
        b {
          background-color: lighten($main, 20%);
          transition-delay: 0.2s;
        }
      }
      &:last-child {
        b {
          background-color: lighten($main, 20%);
          transition-delay: 0.4s;
        }
      }
      b {
        position: absolute;
        left: 0;
        top: 0;
        width: 0;
        height: 100%;
        background-color: $main;
        transition: 1s all;
      }
    }
  }
}

//레이아웃이 비슷한게 겹치면 이렇게 만든다.
%areaHeader {
  display: flex;
  margin-bottom: 3em;
  h2 {
    font-size: 39px;
    font-weight: 600;
    &:after {
      content: "";
      display: block;
      width: 7px;
      height: 7px;
      border-radius: 50%;
      background-color: $main;
    }
  }
  p {
    font-size: 17px;
    position: relative;
    margin-left: 30px;
    padding-left: 100px;
    &:before {
      content: "";
      position: absolute;
      left: 0;
      top: 15px;
      height: 3px;
      background-color: #222;
      width: 70px;
    }
  }
}

//섹션 공통 영역
section.area {
  height: 100vh;
  position: relative;
  @include flex($a: center, $j: center);

  &.visual {
    @include bg("mainBG_01.jpg");
    color: #fff;
    h2 {
      font-size: 80px;
      font-weight: 700;
      line-height: 1;
      margin: 0 0 20px;
    }

    p {
      font-size: 18px;
    }

    .sns {
      position: absolute;
      left: 50px;
      bottom: 50px;

      @include flex;
      li:nth-child(2) {
        margin: 0 15px;
      }
    }
  }

  &.solution {
    header {
      @extend %areaHeader;
    }
  }
  &.marketing {
    @include bg("business_03.jpg");
    color: #fff;
    header {
      @extend %areaHeader;
      p:before {
        background-color: #fff;
      }
    }
  }

  .inner {
    //위에 선언한 것을 불러온다. @extend
    //%로 하면 불러오기만 하는 용 .으로하면 해당 클래스를 불러온는 것
    @extend %base;
  }
}
